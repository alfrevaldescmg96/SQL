#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

#1. How many orders were placed in January? 
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'

#2. How many of those orders were for an iPhone? 
SELECT COUNT(orderid) 
  FROM BIT_DB.JanSales
 WHERE Product = 'iPhone' AND 
       length(orderid) = 6 AND 
       orderid <> 'Order ID';

#3. Select the customer account numbers for all the orders that were placed in February. 
SELECT DISTINCT acctnum
  FROM BIT_DB.customers cust
       INNER JOIN
       BIT_DB.FebSales Feb ON cust.order_id = FEB.orderid
 WHERE length(orderid) = 6 AND 
       orderid <> 'Order ID';

#4. Which product was the cheapest one sold in January, and what was the price? 
SELECT DISTINCT Product,
                MIN(price) AS MIN
  FROM JanSales
 WHERE length(orderid) = 6 AND 
       orderid <> 'Order ID'
 GROUP BY price
 ORDER BY MIN;

#5. What is the total revenue for each product sold in January?
SELECT Product,
       ' $' || ROUND(SUM(quantity) * price, 2) AS total_revenue
  FROM JanSales
 WHERE length(orderid) = 6 AND 
       orderid <> 'Order ID'
 GROUP BY Product
 ORDER BY SUM(price) DESC;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT FebSales.orderID,
       FebSales.Product,
       FebSales.location,
       FebSales.Quantity,
       FebSales.price,
       ' $' || ROUND(SUM(quantity) * price, 2) AS total_revenue
  FROM FebSales
 WHERE FebSales.location LIKE '%548 Lincoln %'
 GROUP BY Product;

#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
SELECT COUNT(acctnum) AS total_acc,
       ROUND(AVG(Quantity * Price),2) AS AVG
  FROM FebSales
       LEFT JOIN
       customers ON FebSales.orderID = customers.order_id
 WHERE length(orderid) = 6 AND 
       orderid <> 'Order ID' AND 
       Quantity > 2
#8. This query selects the product name and the sum of quantity sold for all sales made in locations containing 'Los Angeles' in the name. It then groups the results by the product name.
SELECT Product,
       SUM(Quantity) 
  FROM FebSales
 WHERE location LIKE '%Los Angeles%'
 GROUP BY Product;

#9.Which locations in New York received at least 3 orders in January, and how many orders did they each receive? 
SELECT orderID,
       location,
       count(orderID) 
  FROM BIT_DB.JanSales
 WHERE location LIKE '%NY%' AND 
       length(orderid) = 6 AND 
       orderid <> 'Order ID'
 GROUP BY location
HAVING count(orderID) > 2;

#10. How many of each type of headphone were sold in February?
SELECT DISTINCT Product,
                SUM(quantity) AS total_quantity
  FROM BIT_DB.FebSales
 WHERE Product LIKE '%headphone%' AND 
       length(orderid) = 6 AND 
       orderid <> 'Order ID'
 GROUP BY Product;

#11. What was the average amount spent per account in February? 
SELECT ROUND(SUM(Quantity * price) / COUNT(DISTINCT c.acctnum), 2) AS avg_amount_per_account
  FROM customers c
       LEFT JOIN
       FebSales f ON f.orderID = c.order_id
 WHERE length(orderid) = 6 AND 
       orderid <> 'Order ID';

#12. What was the average quantity of products purchased per account in February?
SELECT SUM(f.Quantity)/COUNT(c.acctnum)
  FROM customers c
       LEFT JOIN
       FebSales f ON f.orderID = c.order_id
 WHERE length(orderid) = 6 AND 
       orderid <> 'Order ID';
       
#13. Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT DISTINCT Product,
                ROUND(SUM(Quantity) * price, 2) AS total_revenue
  FROM JanSales
 WHERE length(orderid) = 6 AND 
       orderid <> 'Order ID'
 GROUP BY Product
 ORDER BY total_revenue DESC
 LIMIT 1;

